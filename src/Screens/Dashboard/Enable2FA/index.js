import React, { useState } from 'react';
import { SafeAreaView, Text, View, StatusBar, ScrollView,Keyboard } from 'react-native';

import {
    CodeField,
    Cursor,
    useBlurOnFulfill,
    useClearByFocusCell,
} from 'react-native-confirmation-code-field';
import { Button } from '../../../components/common';
import { verify2FA, verifyUser2FA } from '../../../redux/actions/needs.actions';
import { colors } from '../../../Res';
import Toast from 'react-native-toast-message';
import { useDispatch, useSelector } from 'react-redux'
import styles from './styles';
import Loader from '../../../components/common/Loader';
import AsyncStorage from "@react-native-async-storage/async-storage";

const CELL_COUNT = 6;

const Enable2FA = ({ navigation }) => {
    const [enableMask, setEnableMask] = useState(true);
    const [value, setValue] = useState('');
    const ref = useBlurOnFulfill({ value, cellCount: CELL_COUNT });
    const [props, getCellOnLayoutHandler] = useClearByFocusCell({
        value,
        setValue,
    });
    const isLoading = useSelector(state => state.users.isRequesting)
    const dispatch = useDispatch()
    const toggleMask = () => setEnableMask((f) => !f);
    const renderCell = ({ index, symbol, isFocused }) => {
        let textChild = null;

        if (symbol) {
            textChild = enableMask ? 'â€¢' : symbol;
        } else if (isFocused) {
            textChild = <Cursor />;
        }

        return (
            <Text
                key={index}
                style={[styles.cell, isFocused && styles.focusCell]}
                onLayout={getCellOnLayoutHandler(index)}>
                {textChild}
            </Text>
        );
    };

    const _verify = () => {
        if (!value) {
            Toast.show({
                type: 'error',
                text1: 'Please enter code.',
            })
            return
        }
        dispatch(verify2FA({ twoFactorCode: value })).then(res => {
            let verifyuser = true
            AsyncStorage.setItem('verify_user', JSON.stringify(verifyuser))
            AsyncStorage.setItem('access_token', res?.accessToken)
            AsyncStorage.setItem('refresh_Access_Token', res?.refreshAccessToken)
            if (res) {
                Toast.show({
                    type: 'success',
                    text1: res?.message,
                })
            }
            navigation.navigate('BottomTabs')
        })
    }

    return (
        <>
            <StatusBar backgroundColor={colors.blue} barStyle={"light-content"} />
            <SafeAreaView style={{ flex: 1, backgroundColor: colors.blue, justifyContent: "center" }}>
                <Loader isLoading={isLoading} />
                <View style={{ alignItems: "center" }}>
                    <Text style={styles.title}>Enter Code </Text>
                    <Text style={styles.txt}>Enter the 6-digit code generated by google Authenticator. </Text>
                    <View style={styles.fieldRow}>
                        <CodeField
                            ref={ref}
                            {...props}
                            value={value}
                            onChangeText={setValue}
                            cellCount={CELL_COUNT}
                            keyboardType="number-pad"
                            onSubmitEditing={Keyboard.dismiss}
                            textContentType="oneTimeCode"
                            renderCell={renderCell}
                        />
                    </View>
                    <Text style={styles.toggle} onPress={toggleMask}>
                        {enableMask ? "Show password" : "Hide password"}
                    </Text>

                </View>
                <View style={{ paddingHorizontal: 20 }}>
                    <Button
                        styling={styles.resbtn}
                        text={"Next"}
                        textstyle={styles.restext}
                        onPress={_verify}
                    />
                </View>

            </SafeAreaView>
        </>
    );
};

export default Enable2FA